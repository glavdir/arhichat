{"version":3,"sources":["webpack:///3.build.js","webpack:///./src/components/arhibash.vue","webpack:///src/components/arhibash.vue","webpack:///./src/components/arhibash.vue?b6ce","webpack:///./src/components/arhibash.vue?dcfc","webpack:///./node_modules/html2bbcode/lib/html2bbcode.js","webpack:///./src/components/arhibash.vue?d016"],"names":["webpackJsonp","259","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_arhibash_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7f930fb0_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_arhibash_vue__","normalizeComponent","__vue_styles__","Component","268","__WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor__","__WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor___default","n","__WEBPACK_IMPORTED_MODULE_1_html2bbcode__","__WEBPACK_IMPORTED_MODULE_1_html2bbcode___default","converter","a","HTML2BBCode","weaknewline","data","pagetext","postid","time","methods","openBash","params","this_app","this","$socket","emit","openPrevBash","direction","openNextBash","openLastBash","saveBash","event","feed","s","result","flash","timeout","newBash","editBash","target","innerHTML","computed","postTitle","momentum","utc","add","$store","state","timezoneoffset","format","components","medium-editor","created","294","exports","content","i","locals","295","push","296","name","definition","html2bbcode","HTMLTag","length","HTMLStack","stack","BBCode","opts","duptags","headingtags","selfendtags","newlinetags","concat","noemptytags","noemptyattrtags","prototype","findquoteend","script","start","multiline","end","len","d","findscriptend","freg","qi","lastIndex","m","exec","quote","quotation","substr","parseStyle","style","ss","split","r_style","count","val","slice","join","trim","JSON","parse","err","toLowerCase","parseAttributes","attr","blank","lastkey","invalue","r_attr","add_attr","k","v","test","b","e","html","Error","tagheadend","selfend","indexOf","sattr","attrlen","that","add_content","hstack","append","script_len","j","i_tagend","t_start","t_tagheadend","lasttagend","push_plaintext","t_i","tag","pop","dupRegex","RegExp","nlsRegex","nleRegex","empRegex","minify","replace","unescapeMap","nbsp","amp","lt","gt","quot","unescape","str","nonbsp","src","testRegexp","escaper","match","m1","code","parseInt","String","fromCharCode","replaceRegexp","decode","dedup","ts","strip","parent","afternewline","blanks","stag","anl","new_stack","new_len","exists","k1","splice","showtree","tab","depth","console","log","stringify","maps","section","img","empty","em","strong","del","ins","u","center","ul","ol","li","newline","blockquote","pre","font","extend","span","color","size","face","h1","h2","h3","h4","h5","h6","p","br","table","tr","div","!doctype","ignore","head","meta","link","open","Array","solidify","_append","st","close","rollback","toString","c","c1Regex","pad2","r","g","px2size","name2size","transsize","undefined","ns","px","convertStyle","htag","sec","bbs","addbb","tsec","ra","imagescale","w","h","w1","width","height","att","noalign","nolist","noheadings","headings2size","hi","convert","bbcode","recursive","hs","fnewline","debug","297","render","_vm","_h","$createElement","_c","_self","staticClass","on","click","_v","_s","attrs","text","custom-tag","options","toolbar","buttons","anchorPreview","disableExtraSpaces","paste","forcePlainText","data-placeholder","edit","$event","staticRenderFns","esExports"],"mappings":"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","file":"3.build.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 259:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_arhibash_vue__ = __webpack_require__(268);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7f930fb0_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_arhibash_vue__ = __webpack_require__(297);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(294)\n}\nvar normalizeComponent = __webpack_require__(5)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7f930fb0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_arhibash_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7f930fb0_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_arhibash_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_html2bbcode__ = __webpack_require__(296);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_html2bbcode___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_html2bbcode__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nvar converter = new __WEBPACK_IMPORTED_MODULE_1_html2bbcode___default.a.HTML2BBCode({ weaknewline: false });\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        return {\n            pagetext: '',\n            postid: '',\n            time: 0\n        };\n    },\n    methods: {\n        openBash: function openBash(params) {\n            var this_app = this;\n            this.$socket.emit('open_bash', params, function (data) {\n                this_app.postid = data.postid;\n                this_app.pagetext = data.pagetext;\n                this_app.time = data.time;\n            });\n        },\n        openPrevBash: function openPrevBash() {\n            this.openBash({ postid: this.postid, direction: 'prev' });\n        },\n        openNextBash: function openNextBash() {\n            this.openBash({ postid: this.postid, direction: 'next' });\n        },\n        openLastBash: function openLastBash() {\n            this.openBash({ postid: 0, direction: 'last' });\n        },\n        saveBash: function saveBash(event) {\n            var this_app = this;\n\n            // console.log(converter.feed(this.pagetext).s);\n\n            this.$socket.emit('save_bash', { postid: this.postid, pagetext: converter.feed(this.pagetext).s }, function (result) {\n                if (result) {\n                    this_app.postid = result.postid;\n                    this_app.time = result.time;\n                    this_app.flash('Сохранено', 'success', { timeout: 2000 });\n                } else this_app.flash('ВНИМАНИЕ! Пост не сохранен!', 'error', { timeout: 10000 });\n            });\n        },\n        newBash: function newBash() {\n            this.postid = '';\n            this.pagetext = '';\n            this.time = 0;\n        },\n        editBash: function editBash(event) {\n            this.pagetext = event.event.target.innerHTML;\n        }\n    },\n    computed: {\n        postTitle: function postTitle() {\n            if (this.time == 0) {\n                return '* новый пост';\n            } else {\n                return this.momentum(this.time * 1000).utc().add(this.$store.state.timezoneoffset, 'hours').format('DD MMM YYYY');\n            }\n        }\n    },\n    components: {\n        'medium-editor': __WEBPACK_IMPORTED_MODULE_0_vue2_medium_editor___default.a\n    },\n    created: function created() {\n        this.openLastBash();\n    }\n});\n\n/***/ }),\n\n/***/ 294:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(295);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(4)(\"6a3be1ac\", content, true);\n\n/***/ }),\n\n/***/ 295:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 296:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n(function (name, definition) {\n  if (true) {\n    module.exports = definition();\n  } else if (typeof define === 'function' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    this[name] = definition();\n  }\n})('html2bbcode', function (html2bbcode) {\n\n  'use strict';\n\n  html2bbcode = { version: '1.2.3' };\n\n  //function HTMLAttribute()\n\n  function HTMLTag() {\n    this.name = '';\n    this.length = 0;\n    //this.attr = null;\n    //this.content = null;\n  }\n\n  HTMLTag.duptags = ['div', 'span'];\n  HTMLTag.headingtags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n  HTMLTag.selfendtags = ['!doctype', 'meta', 'link','img', 'br'];\n  HTMLTag.newlinetags = ['div', 'p', 'br', 'li', 'tr'].concat(HTMLTag.headingtags);\n  HTMLTag.noemptytags = ['head', 'style', 'script',\n    'span', 'a', 'font', 'color', 'size', 'face',\n    'strong', 'b', 'em', 'i', 'del', 's', 'ins', 'u'];\n  HTMLTag.noemptyattrtags = ['img'];\n\n  HTMLTag.prototype.findquoteend = function (script, start, multiline) {\n    var end = -1;\n    var i = start ? start : 0;\n    var len = script.length;\n    var d = script[i] === '\\\"';\n\n    i++;\n    while (i < len) {\n      if (script[i] === '\\\\') {\n        i++;\n        switch (script[i]) {\n          case 'u':\n            // \\uXXXX\n            i += 5;\n            break;\n          case 'x':\n            // \\xXX\n            i += 3;\n            break;\n          default:\n            // \\n ...\n            i++;\n            break;\n        }\n      } else if ((d && script[i] === '\\\"') || (!d && script[i] === '\\'')) {\n        end = i;\n        break;\n      } else if (script[i] === '\\n' && !multiline) {\n        // not allow change line\n        break;\n      } else {\n        i++;\n      }\n    }\n\n    return end;\n  };\n\n  HTMLTag.prototype.findscriptend = function (script, start) {\n    var end = -1;\n    var i = start ? start : 0;\n    var len = script.length;\n    var freg = /(['\"]|<\\s*?\\/\\s*?script\\s*?>)/ig;\n\n    while (i < len) {\n      if (script[i] === '\\\"' || script[i] === '\\'') {\n        var qi = this.findquoteend(script, i, true);\n        if (qi === -1) {\n          break;\n        }\n        i = qi + 1;\n      } else {\n        freg.lastIndex = i;\n        var m = freg.exec(script);\n        if (!m || m.length <= 0) {\n          break;\n        } else if (m[0][0] === '<') {\n          //script here\n          end = freg.lastIndex - m[0].length;\n          break;\n        }\n        // quote\n        i = freg.lastIndex - 1;\n        //console.log(i, script.substr(i, 5));\n        continue;\n      }\n    }\n    return end;\n  };\n\n  HTMLTag.prototype.quote = function (quotation) {\n    // convert string type\n    if (quotation[0] === '\\'') {\n      var s = '\"';\n      var i = 1;\n      var len = quotation.length - 1; // last is \\'\n      var start = i;\n      while (i < len) {\n        if (quotation[i] === '\\\\') {\n          i++;\n          switch (quotation[i]) {\n            case 'u':\n              // \\uXXXX\n              i += 5;\n              break;\n            case 'x':\n              // \\xXX\n              i += 3;\n              break;\n            default:\n              // \\n ...\n              i++;\n              break;\n          }\n        } else if (quotation[i] === '\\\"') {\n          s += quotation.substr(start, i - start);\n          s += '\\\\\"';\n          i++;\n          start = i;\n          break;\n        } else {\n          i++;\n        }\n      }\n      if (start < len) {\n        s += quotation.substr(start, len - start);\n      }\n      s += '\"';\n      return s;\n    } else {\n      return quotation;\n    }\n  };\n\n  HTMLTag.prototype.parseStyle = function (style) {\n    var ss = style.split(';');\n    var r_style = {};\n    var count = 0;\n    for (var i = 0; i < ss.length; i++) {\n      var s = ss[i].split(':');\n      if (s.length >= 2) {\n        count++;\n        var val;\n        if (s.length > 2) {\n          // eg. url(http://example.com)\n          val = s.slice(1).join(':').trim();\n        } else {\n          val = s[1].trim();\n        }\n        if (val[0] === '\\'' && val[val.length - 1] === '\\'') {\n          try {\n            val = JSON.parse(this.quote(val));\n          } catch (err) {\n          }\n        }\n        r_style[s[0].trim().toLowerCase()] = val;\n      }\n    }\n    if (count > 0) {\n      return r_style;\n    } else {\n      return undefined;\n    }\n  };\n\n  HTMLTag.prototype.parseAttributes = function (attr) {\n    attr = attr.trim();\n    var blank = /\\s/;\n    var i = 0;\n    var len = attr.length;\n    var start = i;\n    var lastkey = null;\n    var invalue = false;\n    var r_attr = {};\n    var add_attr = function (k, v) {\n      if (typeof v === 'undefined') {\n        v = null;\n      }\n      k = k.trim().toLowerCase();\n      r_attr[k] = v;\n    };\n    while (i < len) {\n      if (attr[i] === '=') {\n        // TODO: check lastkey, currently drop previous lastkey\n        lastkey = attr.substr(start, i - start);\n        invalue = false;\n      } else if (blank.test(attr[i])) {\n        if (lastkey && invalue) {\n          add_attr(lastkey, attr.substr(start, i - start));\n          invalue = false;\n          lastkey = null;\n        } else if (i - start > 0) {\n          lastkey = attr.substr(start, i - start);\n          add_attr(lastkey);\n          lastkey = null;\n        }\n        start = i + 1;\n      } else if (lastkey && !invalue) {\n        start = i;\n        if (attr[i] === '\"' || attr[i] === '\\'') {\n          var b = attr[i] === '\\'';\n          i = this.findquoteend(attr, i);\n          if (i === -1) {\n            break;\n          }\n          var v = attr.substr(start, i + 1 - start);\n          if (b) {\n            v = this.quote(v);\n          }\n          try {\n            v = JSON.parse(v);\n          } catch (e) {\n          }\n          add_attr(lastkey, v);\n          lastkey = null;\n          start = i + 1;\n        } else {\n          invalue = true;\n        }\n      }\n      i++;\n    }\n    if (start < len) {\n      var d = attr.substr(start);\n      if (lastkey) {\n        add_attr(lastkey, d);\n      } else {\n        add_attr(d);\n      }\n      lastkey = null;\n    }\n    var count = 0;\n    for (var k in r_attr) {\n      count++;\n    }\n    if (count > 0) {\n      if (r_attr.style) {\n        r_attr.style = this.parseStyle(r_attr.style);\n      }\n      this.attr = r_attr;\n    }\n  };\n\n  HTMLTag.prototype.parse = function (html) {\n    var i = 0;\n    if (html[i] !== '<') {\n      throw new Error('not a tag');\n    }\n    var len = html.length;\n    var blank = /\\s/;\n    //var htmltagq = /[<>]/;\n    // strip tagname head blank\n    while (i < len) {\n      if (html[i] === '<') {\n        i++;\n      } else if (html[i] === '>') {\n        // drop this empty tag\n        this.length = i + 1;\n        return this;\n      } else if (blank.test(html[i])) {\n        i++;\n      } else {\n        break;\n      }\n    }\n    if (i >= len) {\n      // drop this\n      this.length = len;\n      return this;\n    }\n\n    // name\n    var start = i;\n    var tagheadend = false;\n    while (i < len && !blank.test(html[i])) {\n      if (html[i] === '>') {\n        tagheadend = true;\n        break;\n      } else if (html[i] === '/') {\n        break;\n      }\n      i++;\n    }\n    if (i >= len) {\n      // drop this\n      this.length = i;\n      return this;\n    }\n    this.name = html.substr(start, i - start).trim().toLowerCase();\n    if (this.name.length > 0 && this.name[0] === '/') {\n      this.length = i;\n      this.name = this.name.substr(1);\n      this.selfend = true;\n      return this;\n    }\n    if (HTMLTag.selfendtags.indexOf(this.name) >= 0) {\n      this.selfend = true;\n    }\n\n    // attr\n    if (!tagheadend) {\n      start = i;\n      while (i < len && html[i] !== '>') {\n        i++;\n      }\n      if (i >= len) {\n        // drop this\n        this.length = i;\n        return this;\n      } else if (i - start > 0) {\n        var sattr = html.substr(start, i - start).trim();\n        var attrlen = sattr.length;\n        if (attrlen > 0 && sattr[attrlen - 1] === '/') {\n          this.selfend = true;\n          sattr = sattr.substr(0, attrlen - 1);\n        }\n        this.parseAttributes(sattr);\n      }\n    }\n    i++; // skip '>'\n\n    if (this.selfend) {\n      this.length = i;\n      return this;\n    }\n\n    // content\n    var that = this;\n    var add_content = function (html) {\n      var hstack = new HTMLStack().parse(html);\n      if (that.content) {\n        that.content.append(hstack);\n      } else {\n        that.content = hstack;\n      }\n      return hstack.length;\n    };\n\n    if (this.name === 'script') {\n      var script_len = this.findscriptend(html.substr(i));\n      if (script_len < 0) {\n        this.length = len;\n        return this;\n      }\n\n      this.content = new HTMLStack();\n      var script = html.substr(i, script_len);\n      this.content.length = script_len;\n      this.content.stack = [ script ];\n\n      i += script_len;\n      // script tag end\n      start = html.indexOf('>', i);\n      if (start < 0) {\n        // no possible\n        this.length = len;\n        return this;\n      }\n\n      this.length = start + 1;\n      return this;\n    }\n\n    var j = 0;\n    while (i < len) {\n      // loop to tag end\n      j++;\n      start = i;\n\n      while (i < len && blank.test(html[i])) {\n        i++;\n      }\n\n      while (i < len && html[i] !== '<') {\n        i++;\n      }\n\n      var i_tagend = i;\n      i++;\n      while (i < len && blank.test(html[i])) {\n        i++;\n      }\n\n      if (i >= len) {\n        // drop this\n        this.content = new HTMLStack().parse(html.substr(start));\n        this.length = len;\n        return this;\n      } else {\n        if (i < len && html[i] === '/') {\n          i++;\n          while (i < len && blank.test(html[i])) {\n            i++;\n          }\n          if (i >= len) {\n            // drop this\n            i += add_content(html.substr(start));\n            this.length = len;\n            return this;\n          } else {\n            var t_start = i;\n            var t_tagheadend = false;\n            while (i < len && !blank.test(html[i])) {\n              if (html[i] === '>') {\n                t_tagheadend = true;\n                break;\n              }\n              i++;\n            }\n            if (i > t_start) {\n              if (!t_tagheadend) {\n                while (i < len && html[i] !== '>') {\n                  i++;\n                }\n              }\n              var ename = html.substr(t_start, i - t_start).trim().toLowerCase();\n              i++; //skip '>'\n              // force stop current tag\n              /*if (ename === this.name)*/ {\n                // end of tag\n                this.length = i;\n                if (i_tagend > start) {\n                  // add content\n                  add_content(html.substr(start, i_tagend - start));\n                }\n                return this;\n              }\n            }\n          }\n        }\n      }\n\n      i = start + add_content(html.substr(start));\n    }\n\n    this.length = i;\n    return this;\n  };\n\n  function HTMLStack() {\n    this.stack = [];\n    this.length = 0;\n  }\n\n  HTMLStack.prototype.parse = function (html) {\n    // check first...\n    if (!html) {\n      return this;\n    }\n\n    var i = 0;\n    var len = html.length;\n    var lasttagend = 0;\n    var blank = /\\s/;\n    var that = this;\n    var push_plaintext = function (start, end) {\n      if (start < end) {\n        that.push(html.substr(start, end - start));\n      }\n    };\n    while (i < len) {\n      switch (html[i]) {\n        case '<':\n          push_plaintext(lasttagend, i);\n\n          // check end & drop\n          var t_i = i + 1;\n          while (t_i < len && blank.test(html[t_i])) {\n            t_i++;\n          }\n          if (t_i < len && html[t_i] === '/') {\n            return this;\n          }\n\n          var tag = new HTMLTag().parse(html.substr(i));\n          this.push(tag);\n          i += tag.length;\n          lasttagend = i;\n          break;\n        case '>':\n          // TODO: drop the >\n          i++;\n          break;\n        default:\n          i++;\n          break;\n      }\n    }\n    push_plaintext(lasttagend, len);\n    return this;\n  };\n\n  HTMLStack.prototype.push = function (data) {\n    this.length += data.length;\n    this.stack.push(data);\n  };\n\n  HTMLStack.prototype.pop = function () {\n    return this.stack.pop();\n  };\n\n  HTMLStack.prototype.append = function (hstack) {\n    this.stack = this.stack.concat(hstack.stack);\n    this.length += hstack.length;\n  };\n\n  (function () {\n    var dupRegex = new RegExp(\n      '<\\\\s*?(' + HTMLTag.duptags.join('|') + ')\\\\s*?>\\\\s*?'\n      + '<\\\\s*?\\\\1\\\\s*?>'\n      + '(((?!<\\\\s*?\\\\1\\\\s*?>)[\\\\S\\\\s])*?)'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>\\\\s*?'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>', 'ig');\n    var nlsRegex = new RegExp(\n      '(<\\\\s*?(' + HTMLTag.newlinetags.join('|') + ')[^>]*?>)\\\\s+', 'ig');\n    var nleRegex = new RegExp(\n      '\\\\s+(<\\\\s*?/\\\\s*?(' + HTMLTag.newlinetags.join('|') + ')\\\\s*?>)', 'ig');\n    var empRegex = new RegExp(\n      '<\\\\s*?(' + HTMLTag.noemptytags.join('|') + ')[^>]*?>'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>', 'ig');\n    HTMLStack.minify = function (html) {\n      html = html.replace(empRegex, '');\n      html = html.replace(nlsRegex, '$1');\n      html = html.replace(nleRegex, '$1');\n      html = html.replace(/\\s{2,}/g, ' ');\n      while (dupRegex.test(html)) {\n        html = html.replace(dupRegex, '<$1>$2</$1>');\n      }\n      html = html.replace(/>\\s{2,}/g, '> ');\n      html = html.replace(/\\s{2,}<\\\\s*?\\//g, ' </');\n      return html;\n    };\n  })();\n\n  var escapeMap = {\n    '&': 'amp',\n    '<': 'lt',\n    '>': 'gt',\n    '\"': 'quot',\n    \"'\": '#x27',\n    '`': '#x60'\n  };\n  var unescapeMap = {\n    'nbsp': ' ',\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  };\n\n  HTMLStack.unescape = function (str, nonbsp) {\n    var src = '&([a-zA-Z]+?|#[xX][\\\\da-fA-F]+?|#\\\\d+?);';\n    var testRegexp = new RegExp(src);\n    var escaper = function (match, m1) {\n      m1 = m1.toLowerCase();\n      if (nonbsp && m1 === 'nbsp') {\n        return '&nbsp;';\n      }\n      var m = unescapeMap[m1];\n      if (m) {\n        return m;\n      } else if (m1[0] === '#') {\n        var code = 0;\n        if (m1[1] == 'x') {\n          code = parseInt(m1.substr(2), 16);\n        } else {\n          code = parseInt(m1.substr(1));\n        }\n        if (code) {\n          return String.fromCharCode(code);\n        }\n      }\n      return '';\n    };\n    if (testRegexp.test(str)) {\n      var replaceRegexp = new RegExp(src, 'g');\n      str = str.replace(replaceRegexp, escaper);\n    }\n    return str;\n  };\n\n  HTMLStack.prototype.decode = function (nonbsp) {\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (typeof s === 'string') {\n        this.stack[i] = HTMLStack.unescape(s, nonbsp);\n      } else if (s instanceof HTMLTag && s.content) {\n        s.content.decode(nonbsp);\n      }\n    }\n    return this;\n  };\n\n  HTMLStack.prototype.dedup = function () {\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (s instanceof HTMLTag && s.content) {\n        if (HTMLTag.duptags.indexOf(s.name) >= 0 && !s.attr && s.content.stack.length === 1) {\n          var ts = s.content.stack[0];\n          if (ts.name === s.name) {\n            this.stack[i] = ts;\n            i--;\n            continue;\n          }\n        }\n        s.content.dedup();\n      }\n    }\n    return this;\n  };\n\n  HTMLStack.prototype.strip = function (parent, afternewline) {\n\n    if (!afternewline) {\n      afternewline = (parent && !afternewline) ? (HTMLTag.newlinetags.indexOf(parent.name) >= 0) : true;\n    }\n\n    var blanks = /^\\s*$/;\n    var k = 0;\n    var stag = true;\n    // first recursive\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (s instanceof HTMLTag) {\n        stag = true;\n        if (s.content) {\n          //check if is after newline\n          var anl;\n          if (k <= 0) {\n            anl = afternewline;\n          } else {\n            anl = false;\n            // fine previous one\n            for (var j = i - 1; j >= 0; j--) {\n              var ts = this.stack[j];\n              if (ts instanceof HTMLTag) {\n                anl = (HTMLTag.newlinetags.indexOf(ts.name) >= 0);\n                //anl = true;\n                break;\n              } else if (typeof ts === 'string' && blanks.test(ts)) {\n                //continue;\n              } else {\n                break;\n              }\n            }\n          }\n          s.content.strip(s, anl);\n        }\n      } else if (typeof s === 'string' && blanks.test(s)) {\n        if (stag) {\n          continue;\n        }\n      }\n      k++;\n    }\n\n    stag = true;\n    var new_stack = [];\n    var new_len = 0;\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (typeof s === 'string' && blanks.test(s) && afternewline) {\n        if (stag) {\n          continue;\n        }\n        afternewline = false;\n      } else if (s instanceof HTMLTag) {\n        stag = true;\n        if (HTMLTag.noemptyattrtags.indexOf(s.name) >= 0) {\n          // strip like <img src=\"\" />\n          if (!s.attr) {\n            continue;\n          }\n          var exists = false;\n          for (var k1 in s.attr) {\n            if (s.attr[k1]) {\n              exists = true;\n              break;\n            }\n          }\n          if (!exists) {\n            continue;\n          }\n        }\n        if (HTMLTag.noemptytags.indexOf(s.name) >= 0 && !s.content) {\n          // null span\n          continue;\n        } else if (HTMLTag.newlinetags.indexOf(s.name) >= 0) {\n          afternewline = true;\n        /*} else if (s.name === 'span' && afternewline) {*/\n          // keep newline flag\n        } else {\n          afternewline = false;\n        }\n      } else {\n        // not full empty string\n        if (afternewline) {\n          // removehead space after newline\n          s = s.replace(/^\\s+/g, '');\n          if (!s) {\n            // empty string\n            continue;\n          }\n        }\n        s = s.replace(/\\s+/g, ' ');\n        stag = false;\n        afternewline = false;\n      }\n      new_len++;\n      new_stack.push(s);\n    }\n\n    // check last one is empty string\n    var s = new_stack[new_len - 1];\n    if (typeof s === 'string') {\n      if (new_len >= 2 && blanks.test(s)) {\n        // remove last empty string\n        new_stack.splice(new_len - 1, 1);\n        new_len--;\n      } else if (/\\S\\s+$/.test(s)) {\n        // space follow with a non-space string\n        new_stack[new_len - 1] = s.replace(/\\s+$/, '');\n      }\n    }\n\n    if (new_len <= 0 && parent) {\n      delete parent.content;\n      return;\n    }\n\n    this.stack = new_stack;\n    return this;\n  };\n\n  HTMLStack.prototype.showtree = function (tab, depth) {\n    if (!tab) tab = '';\n    if (!depth) depth = 0;\n\n    for (var i = 0; i < this.stack.length; i++) {\n      var d = this.stack[i];\n      if (d instanceof HTMLTag) {\n        console.log(tab, d.name, d.attr ? JSON.stringify(d.attr) : '');\n        if (d.content) {\n          d.content.showtree(tab + '--', depth + 1);\n        }\n      } else if (typeof d === 'string') {\n        console.log(tab, JSON.stringify(d));\n      }\n    }\n  };\n\n  function BBCode() {\n    this.s = '';\n    this.weaknewline = true;\n    this.stack = [];\n  }\n\n  BBCode.maps = {\n    'a': { section: 'url', attr: 'href' },\n    'img': { section: 'img', data: 'src', empty: true },\n    'em': { section: 'i' },\n    'i': { section: 'i' },\n    'strong': { section: 'b' },\n    'b': { section: 'b' },\n    'del': { section: 's' },\n    's': { section: 's' },\n    'ins': { section: 'u' },\n    'u': { section: 'u' },\n    'center': { section: 'center' },\n    'ul': { section: 'ul' },  // may need to treat as 'list'\n    'ol': { section: 'ol' },  // may need to treat as 'list'\n    'li': { section: 'li', newline: 1 },\n    'blockquote': { section: 'quote' },\n    'code': { section: 'code' },\n    'pre': { section: 'code' },\n    'font': { extend: ['color', 'face', 'size'] },\n    'span': { extend: ['color', 'face', 'size'] },\n    'color': { section: 'color', attr: 'color' },\n    'size': { section: 'size', attr: 'size' },\n    'face': { section: 'font', attr: 'face' },\n    // new line tags\n    'h1': { section: 'h1', newline: 1 },\n    'h2': { section: 'h2', newline: 1 },\n    'h3': { section: 'h3', newline: 1 },\n    'h4': { section: 'h4', newline: 1 },\n    'h5': { section: 'h5', newline: 1 },\n    'h6': { section: 'h6', newline: 1 },\n    'p': { newline: 1 },\n    'br': { newline: 2, empty: true },\n    'table': { newline: 1 },\n    'tr': { newline: 1 },\n    'div': { newline: 0 },\n    // ignore tags\n    '!doctype': { ignore: true },\n    'head': { ignore: true },\n    'style': { ignore: true },\n    'script': { ignore: true },\n    'meta': { ignore: true },\n    'link': { ignore: true },\n  };\n\n  BBCode.prototype.open = function (section, attr, data) {\n    if (!section) {\n      return;\n    }\n    if (section instanceof Array) {\n      this.stack = this.stack.concat(section);\n    } else {\n      this.stack.push({\n        section: section,\n        attr: attr,\n        data: data\n      });\n    }\n  };\n\n  BBCode.prototype.append = function (str) {\n    this.solidify();\n    this._append(str);\n  };\n\n  BBCode.prototype._append = function (str) {\n    if (str) {\n      this.s += str;\n      this.weaknewline = false;\n    }\n  };\n\n  BBCode.prototype.solidify = function () {\n    // write back stack\n    var i;\n    for (i = 0; i < this.stack.length; i++) {\n      var st = this.stack[i];\n      var section = st.section;\n      var attr = st.attr;\n      var data = st.data;\n\n      var s = '[' + section;\n      if (typeof attr === 'string') {\n        s += '=' + attr;\n      } else {\n        for (var k in attr) {\n          s += ' ' + k + '=' + attr[k];\n        }\n      }\n      s += ']';\n      if (data) {\n        s += data;\n      }\n\n      this._append(s);\n    }\n    if (i > 0) {\n      this.stack = [];\n    }\n  };\n\n  BBCode.prototype.close = function (section) {\n    if (!section) {\n      return;\n    }\n    this.solidify();\n    this._append('[/' + section + ']');\n  };\n\n  BBCode.prototype.rollback = function () {\n    this.stack = [];\n  };\n\n  BBCode.prototype.newline = function (n) {\n    if (n === 2) {\n      // br\n      this.append('\\n');\n      this.weaknewline = true;\n    } else if (n === 1) {\n      // div, p\n      if (!this.weaknewline) {\n        this.append('\\n');\n        this.weaknewline = true;\n      }\n    } else if (!this.weaknewline) {\n      this.append('\\n');\n      this.weaknewline = true;\n    }\n  };\n\n  BBCode.prototype.toString = function () {\n    return this.s;\n  };\n\n  // opts: transsize, imagescale\n  function HTML2BBCode(opts) {\n    this.opts = opts ? opts : {};\n  }\n\n  HTML2BBCode.prototype.color = function (c) {\n    if (!c) return;\n    var c1Regex = /rgba?\\s*?\\(\\s*?(\\d{1,3})\\s*?,\\s*?(\\d{1,3})\\s*?,\\s*?(\\d{1,3})\\s*?.*?\\)/i;\n    if (c1Regex.test(c)) {\n      var pad2 = function (s) {\n        if (s.length < 2) {\n          s = '0' + s;\n        }\n        return s;\n      }\n      c = c.replace(c1Regex, function (match, r, g, b) {\n        r = pad2(parseInt(r).toString(16));\n        g = pad2(parseInt(g).toString(16));\n        b = pad2(parseInt(b).toString(16));\n        return '#' + r + g + b;\n      });\n    }\n    return c;\n  };\n\n  HTML2BBCode.prototype.size = function (size) {\n    if (!size) return;\n\n    var px2size = [0, 12, 14, 16, 18, 24, 32, 48];\n    var name2size = [null, 'smaller', 'small', 'medium', 'large',\n      'x-large', 'xx-large', '-webkit-xxx-large'];\n\n    if (/^\\d+$/.test(size)) {\n      return size;\n    } else if (/^\\d+?px$/.test(size)) {\n      size = parseInt(size);\n      if (!size || size < 0) {\n        return;\n      }\n      if (this.opts.transsize) {\n        for (var i = px2size.length; i >= 0; i--) {\n          if (i === 0) {\n            // smallest\n            return '1';\n          }\n          if (size >= px2size[i]) {\n            return i.toString();\n          }\n        }\n      } else {\n        return size.toString();\n      }\n    } else {\n      var ns = name2size.indexOf(size);\n      if (ns > 0) {\n        if (this.opts.transsize) {\n          return ns.toString();\n        } else {\n          return px2size[ns].toString();\n        }\n      }\n\n      // TODO: support other type\n      return;\n    }\n\n    return size ? size.toString() : undefined;\n  };\n\n  HTML2BBCode.prototype.px = function (px) {\n    if (!px) return;\n    px = parseInt(px);\n    return px ? px.toString() : undefined;\n  };\n\n  HTML2BBCode.prototype.convertStyle = function (htag, sec) {\n    if (!sec) {\n      return;\n    }\n    var bbs = [];\n    var that = this;\n    var opts = this.opts;\n    var addbb = function (sec) {\n      if (!sec || sec.ignore ||\n        !(sec.section || (sec.extend && sec.extend.length > 0))) {\n        return;\n      }\n      var tsec = { section: sec.section };\n      if (sec.attr) {\n        if (htag.attr) {\n          switch (sec.section) {\n            case 'size':\n              tsec.attr = that.size(htag.attr[sec.attr]);\n              break;\n            case 'color':\n              tsec.attr = that.color(htag.attr[sec.attr]);\n              break;\n            default:\n              tsec.attr = htag.attr[sec.attr];\n              break;\n          }\n          if (htag.attr.style) {\n            var ra;\n            switch (sec.section) {\n              case 'size':\n                ra = htag.attr.style['font-size'];\n                if (ra) ra = that.size(ra);\n                break;\n              case 'color':\n                ra = htag.attr.style['color'];\n                if (ra) ra = that.color(ra);\n                break;\n              case 'font':\n                ra = htag.attr.style['font-family'];\n                break;\n            }\n            if (ra) {\n              tsec.attr = ra;\n            }\n          }\n          if (!tsec.attr) {\n            return;\n          }\n        } else {\n          return;\n        }\n      } else if (sec.section === 'img' && opts.imagescale) {\n        // image attr\n        var w, h;\n        if (htag.attr) {\n          w = that.px(htag.attr['width']);\n          h = that.px(htag.attr['height']);\n          if (htag.attr.style) {\n            var w1, h1;\n            w1 = that.px(htag.attr.style['width']);\n            h1 = that.px(htag.attr.style['height']);\n            if (w1) w = w1;\n            if (h1) h = h1;\n          }\n          if (w && h) {\n            tsec.attr = w + 'x' + h;\n          } else if (w || h) {\n            if (w) {\n              tsec.attr = { width: w };\n            } else {\n              tsec.attr = { height: h };\n            }\n          }\n        }\n      }\n      if (sec.data) {\n        tsec.data = htag.attr[sec.data];\n      }\n      bbs.push(tsec);\n    };\n    // check font-weight & text-align\n    if (htag.attr && htag.attr.style) {\n      if (htag.name !== 'b' && htag.name !== 'strong') {\n        var att = htag.attr.style['font-weight'];\n        if (att === 'bold' || (/^\\d+$/.test(att) && parseInt(att) >= 700)) {\n          addbb(BBCode.maps['b']);\n        }\n      }\n      if (htag.name !== 'center') {\n        var att = htag.attr.style['text-align'];\n        if (att === 'center' && !opts.noalign) {\n          addbb(BBCode.maps['center']);\n        }\n      }\n      if (htag.name !== 'em' && htag.name !== 'i') {\n        var att = htag.attr.style['font-style'];\n        if (att === 'italic' || att === 'oblique') {\n          // italic style\n          addbb(BBCode.maps['i']);\n        }\n      }\n    }\n    if (sec.section === 'list'\n        || sec.section === 'ul' || sec.section === 'ol'\n        || sec.section === 'li') {\n      if (opts.nolist) {\n        return [];\n      }\n    } else if (sec.section === 'center') {\n      if (opts.noalign) {\n        return [];\n      }\n    } else if (/^h\\d+$/.test(sec.section)) {\n      // HTML Headings\n      if (opts.noheadings) {\n        // 18.5 -> 19\n        var headings2size = [ null, '32px', '24px', '19px', '16px', '14px', '12px' ];\n        var m = sec.section.match(/^h(\\d+)$/);\n        var hi = parseInt(m[1]);\n        if (hi <= 0) {\n          return [];\n        } else if (hi >= headings2size.length) {\n          hi = headings2size.length;\n        }\n        bbs.push({ section: 'size', attr: that.size(headings2size[hi]) });\n        return bbs;\n      }\n    }\n\n    if ('extend' in sec) {\n      for (var i = 0; i < sec.extend.length; i++) {\n        var tag = sec.extend[i];\n        addbb(BBCode.maps[tag]);\n      }\n    } else {\n      addbb(sec);\n    }\n    return bbs;\n  };\n\n  HTML2BBCode.prototype.convert = function (hstack) {\n    var bbcode = new BBCode();\n    if (!hstack) {\n      return bbcode;\n    }\n    var that = this;\n    var recursive = function (hs, anl) {\n      for (var i = 0; i < hs.length; i++) {\n        var s = hs[i];\n        if (s instanceof HTMLTag) {\n          if (s.name in BBCode.maps) {\n            var fnewline = 0;\n            var sec = BBCode.maps[s.name];\n            if (sec.ignore) {\n              continue;\n            }\n            if ('newline' in sec) {\n              fnewline = sec.newline;\n              bbcode.newline(sec.newline);\n            }\n            if (!s.content && !sec.empty) {\n              // drop this\n              continue;\n            }\n            var bbs = that.convertStyle(s, sec);\n            bbcode.open(bbs);\n\n            if (s.content) {\n              recursive(s.content.stack, fnewline);\n            }\n            for (var j = bbs.length - 1; j >= 0; j--) {\n              bbcode.close(bbs[j].section);\n            }\n            if (fnewline) {\n              // weak new line\n              bbcode.newline();\n            }\n          } else if (s.content) {\n            // drop section\n            recursive(s.content.stack);\n          }\n        } else if (typeof s === 'string') {\n          // force space\n          //s = s.replace(/&nbsp;/gi, ' ');\n          bbcode.append(s);\n        }\n      }\n    };\n    recursive(hstack.stack);\n    return bbcode;\n  };\n\n  HTML2BBCode.prototype.parse = function (html) {\n    return new HTMLStack().parse(html)\n      .strip().dedup().decode();\n  };\n\n  HTML2BBCode.prototype.feed = function (html) {\n    var hstack = this.parse(html);\n    if (this.opts.debug) {\n      hstack.showtree();\n    }\n    var bbcode = this.convert(hstack);\n    return bbcode;\n  };\n\n  return {\n    HTMLTag: HTMLTag,\n    HTMLStack: HTMLStack,\n    BBCode: BBCode,\n    HTML2BBCode: HTML2BBCode\n  };\n\n});\n\n\n/***/ }),\n\n/***/ 297:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"arhibash_root\"},[_c('div',{staticClass:\"arhibash_header header\"},[_c('button',{staticClass:\"bttn icon-angle-left\",on:{\"click\":_vm.openPrevBash}}),_vm._v(\" \"),_c('button',{staticClass:\"bttn icon-angle-right\",on:{\"click\":_vm.openNextBash}}),_vm._v(\" \"),_c('span',{staticClass:\"flex_splitter\"},[_vm._v(_vm._s(_vm.postTitle))]),_vm._v(\" \"),_c('button',{staticClass:\"bttn\",on:{\"click\":_vm.newBash}},[_vm._v(\"Новый пост\")]),_vm._v(\" \"),_c('button',{staticClass:\"bttn\",on:{\"click\":_vm.saveBash}},[_vm._v(\"Сохранить\")])]),_vm._v(\" \"),_c('div',{staticClass:\"arhibash_conteiner\"},[_c('medium-editor',{staticClass:\"arhibash_post\",attrs:{\"text\":_vm.pagetext,\"custom-tag\":\"div\",\"options\":{toolbar:{buttons:['bold','italic','underline','strikethrough']},anchorPreview: false, disableExtraSpaces:true, paste: {forcePlainText:false}},\"data-placeholder\":\" \"},on:{\"edit\":function($event){_vm.editBash($event)}}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.build.js","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7f930fb0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./arhibash.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./arhibash.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./arhibash.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7f930fb0\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./arhibash.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7f930fb0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/arhibash.vue\n// module id = 259\n// module chunks = 3","<template>\n    <div class=\"arhibash_root\">\n        <div class=\"arhibash_header header\">\n            <button class=\"bttn icon-angle-left\" @click=\"openPrevBash\"></button>\n            <button class=\"bttn icon-angle-right\" @click=\"openNextBash\"></button>\n            <span class=\"flex_splitter\">{{postTitle}}</span>\n            <button class=\"bttn\" @click=\"newBash\">Новый пост</button>\n            <button class=\"bttn\" @click=\"saveBash\">Сохранить</button>\n        </div>\n        <div class=\"arhibash_conteiner\">\n            <medium-editor\n                class=\"arhibash_post\"\n                :text='pagetext'\n                custom-tag='div'\n                :options=\"{toolbar:{buttons:['bold','italic','underline','strikethrough']},anchorPreview: false, disableExtraSpaces:true, paste: {forcePlainText:false}}\"\n                data-placeholder=\" \"\n                @edit=\"editBash($event)\"\n\n            />\n        </div>\n    </div>\n</template>\n\n<script>\n    import editor from 'vue2-medium-editor';\n    import HTML2BBCode from 'html2bbcode'\n    var converter = new HTML2BBCode.HTML2BBCode({weaknewline:false});\n\n    export default {\n        data: function () {\n            return {\n                pagetext:'',\n                postid:'',\n                time:0,\n            }\n        },\n        methods: {\n            openBash(params){\n                let this_app = this;\n                this.$socket.emit('open_bash',params,function (data) {\n                    this_app.postid = data.postid;\n                    this_app.pagetext = data.pagetext;\n                    this_app.time = data.time;\n                });\n            },\n            openPrevBash(){\n                this.openBash({postid:this.postid, direction:'prev'});\n            },\n            openNextBash(){\n                this.openBash({postid:this.postid, direction:'next'});\n            },\n            openLastBash(){\n                this.openBash({postid:0, direction:'last'});\n            },\n            saveBash(event){\n                let this_app = this;\n\n                // console.log(converter.feed(this.pagetext).s);\n\n                this.$socket.emit('save_bash',{postid:this.postid, pagetext:converter.feed(this.pagetext).s},function (result) {\n                    if (result) {\n                        this_app.postid = result.postid;\n                        this_app.time = result.time;\n                        this_app.flash('Сохранено', 'success', {timeout: 2000});\n                    }\n                    else\n                        this_app.flash('ВНИМАНИЕ! Пост не сохранен!', 'error', {timeout: 10000});\n\n                });\n            },\n            newBash(){\n                this.postid = '';\n                this.pagetext = '';\n                this.time = 0;\n            },\n            editBash(event){\n                this.pagetext = event.event.target.innerHTML;\n            }\n        },\n        computed:{\n            postTitle(){\n                if (this.time==0){\n                    return '* новый пост';\n                }else{\n                    return this.momentum(this.time*1000).utc().add(this.$store.state.timezoneoffset,'hours').format('DD MMM YYYY');\n                }\n            }\n        },\n        components: {\n            'medium-editor':editor\n        },\n        created(){\n            this.openLastBash();\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/arhibash.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7f930fb0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./arhibash.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6a3be1ac\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-7f930fb0\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/arhibash.vue\n// module id = 294\n// module chunks = 3","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-7f930fb0\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/arhibash.vue\n// module id = 295\n// module chunks = 3","\n(function (name, definition) {\n  if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define === 'function' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    this[name] = definition();\n  }\n})('html2bbcode', function (html2bbcode) {\n\n  'use strict';\n\n  html2bbcode = { version: '1.2.3' };\n\n  //function HTMLAttribute()\n\n  function HTMLTag() {\n    this.name = '';\n    this.length = 0;\n    //this.attr = null;\n    //this.content = null;\n  }\n\n  HTMLTag.duptags = ['div', 'span'];\n  HTMLTag.headingtags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n  HTMLTag.selfendtags = ['!doctype', 'meta', 'link','img', 'br'];\n  HTMLTag.newlinetags = ['div', 'p', 'br', 'li', 'tr'].concat(HTMLTag.headingtags);\n  HTMLTag.noemptytags = ['head', 'style', 'script',\n    'span', 'a', 'font', 'color', 'size', 'face',\n    'strong', 'b', 'em', 'i', 'del', 's', 'ins', 'u'];\n  HTMLTag.noemptyattrtags = ['img'];\n\n  HTMLTag.prototype.findquoteend = function (script, start, multiline) {\n    var end = -1;\n    var i = start ? start : 0;\n    var len = script.length;\n    var d = script[i] === '\\\"';\n\n    i++;\n    while (i < len) {\n      if (script[i] === '\\\\') {\n        i++;\n        switch (script[i]) {\n          case 'u':\n            // \\uXXXX\n            i += 5;\n            break;\n          case 'x':\n            // \\xXX\n            i += 3;\n            break;\n          default:\n            // \\n ...\n            i++;\n            break;\n        }\n      } else if ((d && script[i] === '\\\"') || (!d && script[i] === '\\'')) {\n        end = i;\n        break;\n      } else if (script[i] === '\\n' && !multiline) {\n        // not allow change line\n        break;\n      } else {\n        i++;\n      }\n    }\n\n    return end;\n  };\n\n  HTMLTag.prototype.findscriptend = function (script, start) {\n    var end = -1;\n    var i = start ? start : 0;\n    var len = script.length;\n    var freg = /(['\"]|<\\s*?\\/\\s*?script\\s*?>)/ig;\n\n    while (i < len) {\n      if (script[i] === '\\\"' || script[i] === '\\'') {\n        var qi = this.findquoteend(script, i, true);\n        if (qi === -1) {\n          break;\n        }\n        i = qi + 1;\n      } else {\n        freg.lastIndex = i;\n        var m = freg.exec(script);\n        if (!m || m.length <= 0) {\n          break;\n        } else if (m[0][0] === '<') {\n          //script here\n          end = freg.lastIndex - m[0].length;\n          break;\n        }\n        // quote\n        i = freg.lastIndex - 1;\n        //console.log(i, script.substr(i, 5));\n        continue;\n      }\n    }\n    return end;\n  };\n\n  HTMLTag.prototype.quote = function (quotation) {\n    // convert string type\n    if (quotation[0] === '\\'') {\n      var s = '\"';\n      var i = 1;\n      var len = quotation.length - 1; // last is \\'\n      var start = i;\n      while (i < len) {\n        if (quotation[i] === '\\\\') {\n          i++;\n          switch (quotation[i]) {\n            case 'u':\n              // \\uXXXX\n              i += 5;\n              break;\n            case 'x':\n              // \\xXX\n              i += 3;\n              break;\n            default:\n              // \\n ...\n              i++;\n              break;\n          }\n        } else if (quotation[i] === '\\\"') {\n          s += quotation.substr(start, i - start);\n          s += '\\\\\"';\n          i++;\n          start = i;\n          break;\n        } else {\n          i++;\n        }\n      }\n      if (start < len) {\n        s += quotation.substr(start, len - start);\n      }\n      s += '\"';\n      return s;\n    } else {\n      return quotation;\n    }\n  };\n\n  HTMLTag.prototype.parseStyle = function (style) {\n    var ss = style.split(';');\n    var r_style = {};\n    var count = 0;\n    for (var i = 0; i < ss.length; i++) {\n      var s = ss[i].split(':');\n      if (s.length >= 2) {\n        count++;\n        var val;\n        if (s.length > 2) {\n          // eg. url(http://example.com)\n          val = s.slice(1).join(':').trim();\n        } else {\n          val = s[1].trim();\n        }\n        if (val[0] === '\\'' && val[val.length - 1] === '\\'') {\n          try {\n            val = JSON.parse(this.quote(val));\n          } catch (err) {\n          }\n        }\n        r_style[s[0].trim().toLowerCase()] = val;\n      }\n    }\n    if (count > 0) {\n      return r_style;\n    } else {\n      return undefined;\n    }\n  };\n\n  HTMLTag.prototype.parseAttributes = function (attr) {\n    attr = attr.trim();\n    var blank = /\\s/;\n    var i = 0;\n    var len = attr.length;\n    var start = i;\n    var lastkey = null;\n    var invalue = false;\n    var r_attr = {};\n    var add_attr = function (k, v) {\n      if (typeof v === 'undefined') {\n        v = null;\n      }\n      k = k.trim().toLowerCase();\n      r_attr[k] = v;\n    };\n    while (i < len) {\n      if (attr[i] === '=') {\n        // TODO: check lastkey, currently drop previous lastkey\n        lastkey = attr.substr(start, i - start);\n        invalue = false;\n      } else if (blank.test(attr[i])) {\n        if (lastkey && invalue) {\n          add_attr(lastkey, attr.substr(start, i - start));\n          invalue = false;\n          lastkey = null;\n        } else if (i - start > 0) {\n          lastkey = attr.substr(start, i - start);\n          add_attr(lastkey);\n          lastkey = null;\n        }\n        start = i + 1;\n      } else if (lastkey && !invalue) {\n        start = i;\n        if (attr[i] === '\"' || attr[i] === '\\'') {\n          var b = attr[i] === '\\'';\n          i = this.findquoteend(attr, i);\n          if (i === -1) {\n            break;\n          }\n          var v = attr.substr(start, i + 1 - start);\n          if (b) {\n            v = this.quote(v);\n          }\n          try {\n            v = JSON.parse(v);\n          } catch (e) {\n          }\n          add_attr(lastkey, v);\n          lastkey = null;\n          start = i + 1;\n        } else {\n          invalue = true;\n        }\n      }\n      i++;\n    }\n    if (start < len) {\n      var d = attr.substr(start);\n      if (lastkey) {\n        add_attr(lastkey, d);\n      } else {\n        add_attr(d);\n      }\n      lastkey = null;\n    }\n    var count = 0;\n    for (var k in r_attr) {\n      count++;\n    }\n    if (count > 0) {\n      if (r_attr.style) {\n        r_attr.style = this.parseStyle(r_attr.style);\n      }\n      this.attr = r_attr;\n    }\n  };\n\n  HTMLTag.prototype.parse = function (html) {\n    var i = 0;\n    if (html[i] !== '<') {\n      throw new Error('not a tag');\n    }\n    var len = html.length;\n    var blank = /\\s/;\n    //var htmltagq = /[<>]/;\n    // strip tagname head blank\n    while (i < len) {\n      if (html[i] === '<') {\n        i++;\n      } else if (html[i] === '>') {\n        // drop this empty tag\n        this.length = i + 1;\n        return this;\n      } else if (blank.test(html[i])) {\n        i++;\n      } else {\n        break;\n      }\n    }\n    if (i >= len) {\n      // drop this\n      this.length = len;\n      return this;\n    }\n\n    // name\n    var start = i;\n    var tagheadend = false;\n    while (i < len && !blank.test(html[i])) {\n      if (html[i] === '>') {\n        tagheadend = true;\n        break;\n      } else if (html[i] === '/') {\n        break;\n      }\n      i++;\n    }\n    if (i >= len) {\n      // drop this\n      this.length = i;\n      return this;\n    }\n    this.name = html.substr(start, i - start).trim().toLowerCase();\n    if (this.name.length > 0 && this.name[0] === '/') {\n      this.length = i;\n      this.name = this.name.substr(1);\n      this.selfend = true;\n      return this;\n    }\n    if (HTMLTag.selfendtags.indexOf(this.name) >= 0) {\n      this.selfend = true;\n    }\n\n    // attr\n    if (!tagheadend) {\n      start = i;\n      while (i < len && html[i] !== '>') {\n        i++;\n      }\n      if (i >= len) {\n        // drop this\n        this.length = i;\n        return this;\n      } else if (i - start > 0) {\n        var sattr = html.substr(start, i - start).trim();\n        var attrlen = sattr.length;\n        if (attrlen > 0 && sattr[attrlen - 1] === '/') {\n          this.selfend = true;\n          sattr = sattr.substr(0, attrlen - 1);\n        }\n        this.parseAttributes(sattr);\n      }\n    }\n    i++; // skip '>'\n\n    if (this.selfend) {\n      this.length = i;\n      return this;\n    }\n\n    // content\n    var that = this;\n    var add_content = function (html) {\n      var hstack = new HTMLStack().parse(html);\n      if (that.content) {\n        that.content.append(hstack);\n      } else {\n        that.content = hstack;\n      }\n      return hstack.length;\n    };\n\n    if (this.name === 'script') {\n      var script_len = this.findscriptend(html.substr(i));\n      if (script_len < 0) {\n        this.length = len;\n        return this;\n      }\n\n      this.content = new HTMLStack();\n      var script = html.substr(i, script_len);\n      this.content.length = script_len;\n      this.content.stack = [ script ];\n\n      i += script_len;\n      // script tag end\n      start = html.indexOf('>', i);\n      if (start < 0) {\n        // no possible\n        this.length = len;\n        return this;\n      }\n\n      this.length = start + 1;\n      return this;\n    }\n\n    var j = 0;\n    while (i < len) {\n      // loop to tag end\n      j++;\n      start = i;\n\n      while (i < len && blank.test(html[i])) {\n        i++;\n      }\n\n      while (i < len && html[i] !== '<') {\n        i++;\n      }\n\n      var i_tagend = i;\n      i++;\n      while (i < len && blank.test(html[i])) {\n        i++;\n      }\n\n      if (i >= len) {\n        // drop this\n        this.content = new HTMLStack().parse(html.substr(start));\n        this.length = len;\n        return this;\n      } else {\n        if (i < len && html[i] === '/') {\n          i++;\n          while (i < len && blank.test(html[i])) {\n            i++;\n          }\n          if (i >= len) {\n            // drop this\n            i += add_content(html.substr(start));\n            this.length = len;\n            return this;\n          } else {\n            var t_start = i;\n            var t_tagheadend = false;\n            while (i < len && !blank.test(html[i])) {\n              if (html[i] === '>') {\n                t_tagheadend = true;\n                break;\n              }\n              i++;\n            }\n            if (i > t_start) {\n              if (!t_tagheadend) {\n                while (i < len && html[i] !== '>') {\n                  i++;\n                }\n              }\n              var ename = html.substr(t_start, i - t_start).trim().toLowerCase();\n              i++; //skip '>'\n              // force stop current tag\n              /*if (ename === this.name)*/ {\n                // end of tag\n                this.length = i;\n                if (i_tagend > start) {\n                  // add content\n                  add_content(html.substr(start, i_tagend - start));\n                }\n                return this;\n              }\n            }\n          }\n        }\n      }\n\n      i = start + add_content(html.substr(start));\n    }\n\n    this.length = i;\n    return this;\n  };\n\n  function HTMLStack() {\n    this.stack = [];\n    this.length = 0;\n  }\n\n  HTMLStack.prototype.parse = function (html) {\n    // check first...\n    if (!html) {\n      return this;\n    }\n\n    var i = 0;\n    var len = html.length;\n    var lasttagend = 0;\n    var blank = /\\s/;\n    var that = this;\n    var push_plaintext = function (start, end) {\n      if (start < end) {\n        that.push(html.substr(start, end - start));\n      }\n    };\n    while (i < len) {\n      switch (html[i]) {\n        case '<':\n          push_plaintext(lasttagend, i);\n\n          // check end & drop\n          var t_i = i + 1;\n          while (t_i < len && blank.test(html[t_i])) {\n            t_i++;\n          }\n          if (t_i < len && html[t_i] === '/') {\n            return this;\n          }\n\n          var tag = new HTMLTag().parse(html.substr(i));\n          this.push(tag);\n          i += tag.length;\n          lasttagend = i;\n          break;\n        case '>':\n          // TODO: drop the >\n          i++;\n          break;\n        default:\n          i++;\n          break;\n      }\n    }\n    push_plaintext(lasttagend, len);\n    return this;\n  };\n\n  HTMLStack.prototype.push = function (data) {\n    this.length += data.length;\n    this.stack.push(data);\n  };\n\n  HTMLStack.prototype.pop = function () {\n    return this.stack.pop();\n  };\n\n  HTMLStack.prototype.append = function (hstack) {\n    this.stack = this.stack.concat(hstack.stack);\n    this.length += hstack.length;\n  };\n\n  (function () {\n    var dupRegex = new RegExp(\n      '<\\\\s*?(' + HTMLTag.duptags.join('|') + ')\\\\s*?>\\\\s*?'\n      + '<\\\\s*?\\\\1\\\\s*?>'\n      + '(((?!<\\\\s*?\\\\1\\\\s*?>)[\\\\S\\\\s])*?)'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>\\\\s*?'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>', 'ig');\n    var nlsRegex = new RegExp(\n      '(<\\\\s*?(' + HTMLTag.newlinetags.join('|') + ')[^>]*?>)\\\\s+', 'ig');\n    var nleRegex = new RegExp(\n      '\\\\s+(<\\\\s*?/\\\\s*?(' + HTMLTag.newlinetags.join('|') + ')\\\\s*?>)', 'ig');\n    var empRegex = new RegExp(\n      '<\\\\s*?(' + HTMLTag.noemptytags.join('|') + ')[^>]*?>'\n      + '<\\\\s*?/\\\\s*?\\\\1\\\\s*?>', 'ig');\n    HTMLStack.minify = function (html) {\n      html = html.replace(empRegex, '');\n      html = html.replace(nlsRegex, '$1');\n      html = html.replace(nleRegex, '$1');\n      html = html.replace(/\\s{2,}/g, ' ');\n      while (dupRegex.test(html)) {\n        html = html.replace(dupRegex, '<$1>$2</$1>');\n      }\n      html = html.replace(/>\\s{2,}/g, '> ');\n      html = html.replace(/\\s{2,}<\\\\s*?\\//g, ' </');\n      return html;\n    };\n  })();\n\n  var escapeMap = {\n    '&': 'amp',\n    '<': 'lt',\n    '>': 'gt',\n    '\"': 'quot',\n    \"'\": '#x27',\n    '`': '#x60'\n  };\n  var unescapeMap = {\n    'nbsp': ' ',\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  };\n\n  HTMLStack.unescape = function (str, nonbsp) {\n    var src = '&([a-zA-Z]+?|#[xX][\\\\da-fA-F]+?|#\\\\d+?);';\n    var testRegexp = new RegExp(src);\n    var escaper = function (match, m1) {\n      m1 = m1.toLowerCase();\n      if (nonbsp && m1 === 'nbsp') {\n        return '&nbsp;';\n      }\n      var m = unescapeMap[m1];\n      if (m) {\n        return m;\n      } else if (m1[0] === '#') {\n        var code = 0;\n        if (m1[1] == 'x') {\n          code = parseInt(m1.substr(2), 16);\n        } else {\n          code = parseInt(m1.substr(1));\n        }\n        if (code) {\n          return String.fromCharCode(code);\n        }\n      }\n      return '';\n    };\n    if (testRegexp.test(str)) {\n      var replaceRegexp = new RegExp(src, 'g');\n      str = str.replace(replaceRegexp, escaper);\n    }\n    return str;\n  };\n\n  HTMLStack.prototype.decode = function (nonbsp) {\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (typeof s === 'string') {\n        this.stack[i] = HTMLStack.unescape(s, nonbsp);\n      } else if (s instanceof HTMLTag && s.content) {\n        s.content.decode(nonbsp);\n      }\n    }\n    return this;\n  };\n\n  HTMLStack.prototype.dedup = function () {\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (s instanceof HTMLTag && s.content) {\n        if (HTMLTag.duptags.indexOf(s.name) >= 0 && !s.attr && s.content.stack.length === 1) {\n          var ts = s.content.stack[0];\n          if (ts.name === s.name) {\n            this.stack[i] = ts;\n            i--;\n            continue;\n          }\n        }\n        s.content.dedup();\n      }\n    }\n    return this;\n  };\n\n  HTMLStack.prototype.strip = function (parent, afternewline) {\n\n    if (!afternewline) {\n      afternewline = (parent && !afternewline) ? (HTMLTag.newlinetags.indexOf(parent.name) >= 0) : true;\n    }\n\n    var blanks = /^\\s*$/;\n    var k = 0;\n    var stag = true;\n    // first recursive\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (s instanceof HTMLTag) {\n        stag = true;\n        if (s.content) {\n          //check if is after newline\n          var anl;\n          if (k <= 0) {\n            anl = afternewline;\n          } else {\n            anl = false;\n            // fine previous one\n            for (var j = i - 1; j >= 0; j--) {\n              var ts = this.stack[j];\n              if (ts instanceof HTMLTag) {\n                anl = (HTMLTag.newlinetags.indexOf(ts.name) >= 0);\n                //anl = true;\n                break;\n              } else if (typeof ts === 'string' && blanks.test(ts)) {\n                //continue;\n              } else {\n                break;\n              }\n            }\n          }\n          s.content.strip(s, anl);\n        }\n      } else if (typeof s === 'string' && blanks.test(s)) {\n        if (stag) {\n          continue;\n        }\n      }\n      k++;\n    }\n\n    stag = true;\n    var new_stack = [];\n    var new_len = 0;\n    for (var i = 0; i < this.stack.length; i++) {\n      var s = this.stack[i];\n      if (typeof s === 'string' && blanks.test(s) && afternewline) {\n        if (stag) {\n          continue;\n        }\n        afternewline = false;\n      } else if (s instanceof HTMLTag) {\n        stag = true;\n        if (HTMLTag.noemptyattrtags.indexOf(s.name) >= 0) {\n          // strip like <img src=\"\" />\n          if (!s.attr) {\n            continue;\n          }\n          var exists = false;\n          for (var k1 in s.attr) {\n            if (s.attr[k1]) {\n              exists = true;\n              break;\n            }\n          }\n          if (!exists) {\n            continue;\n          }\n        }\n        if (HTMLTag.noemptytags.indexOf(s.name) >= 0 && !s.content) {\n          // null span\n          continue;\n        } else if (HTMLTag.newlinetags.indexOf(s.name) >= 0) {\n          afternewline = true;\n        /*} else if (s.name === 'span' && afternewline) {*/\n          // keep newline flag\n        } else {\n          afternewline = false;\n        }\n      } else {\n        // not full empty string\n        if (afternewline) {\n          // removehead space after newline\n          s = s.replace(/^\\s+/g, '');\n          if (!s) {\n            // empty string\n            continue;\n          }\n        }\n        s = s.replace(/\\s+/g, ' ');\n        stag = false;\n        afternewline = false;\n      }\n      new_len++;\n      new_stack.push(s);\n    }\n\n    // check last one is empty string\n    var s = new_stack[new_len - 1];\n    if (typeof s === 'string') {\n      if (new_len >= 2 && blanks.test(s)) {\n        // remove last empty string\n        new_stack.splice(new_len - 1, 1);\n        new_len--;\n      } else if (/\\S\\s+$/.test(s)) {\n        // space follow with a non-space string\n        new_stack[new_len - 1] = s.replace(/\\s+$/, '');\n      }\n    }\n\n    if (new_len <= 0 && parent) {\n      delete parent.content;\n      return;\n    }\n\n    this.stack = new_stack;\n    return this;\n  };\n\n  HTMLStack.prototype.showtree = function (tab, depth) {\n    if (!tab) tab = '';\n    if (!depth) depth = 0;\n\n    for (var i = 0; i < this.stack.length; i++) {\n      var d = this.stack[i];\n      if (d instanceof HTMLTag) {\n        console.log(tab, d.name, d.attr ? JSON.stringify(d.attr) : '');\n        if (d.content) {\n          d.content.showtree(tab + '--', depth + 1);\n        }\n      } else if (typeof d === 'string') {\n        console.log(tab, JSON.stringify(d));\n      }\n    }\n  };\n\n  function BBCode() {\n    this.s = '';\n    this.weaknewline = true;\n    this.stack = [];\n  }\n\n  BBCode.maps = {\n    'a': { section: 'url', attr: 'href' },\n    'img': { section: 'img', data: 'src', empty: true },\n    'em': { section: 'i' },\n    'i': { section: 'i' },\n    'strong': { section: 'b' },\n    'b': { section: 'b' },\n    'del': { section: 's' },\n    's': { section: 's' },\n    'ins': { section: 'u' },\n    'u': { section: 'u' },\n    'center': { section: 'center' },\n    'ul': { section: 'ul' },  // may need to treat as 'list'\n    'ol': { section: 'ol' },  // may need to treat as 'list'\n    'li': { section: 'li', newline: 1 },\n    'blockquote': { section: 'quote' },\n    'code': { section: 'code' },\n    'pre': { section: 'code' },\n    'font': { extend: ['color', 'face', 'size'] },\n    'span': { extend: ['color', 'face', 'size'] },\n    'color': { section: 'color', attr: 'color' },\n    'size': { section: 'size', attr: 'size' },\n    'face': { section: 'font', attr: 'face' },\n    // new line tags\n    'h1': { section: 'h1', newline: 1 },\n    'h2': { section: 'h2', newline: 1 },\n    'h3': { section: 'h3', newline: 1 },\n    'h4': { section: 'h4', newline: 1 },\n    'h5': { section: 'h5', newline: 1 },\n    'h6': { section: 'h6', newline: 1 },\n    'p': { newline: 1 },\n    'br': { newline: 2, empty: true },\n    'table': { newline: 1 },\n    'tr': { newline: 1 },\n    'div': { newline: 0 },\n    // ignore tags\n    '!doctype': { ignore: true },\n    'head': { ignore: true },\n    'style': { ignore: true },\n    'script': { ignore: true },\n    'meta': { ignore: true },\n    'link': { ignore: true },\n  };\n\n  BBCode.prototype.open = function (section, attr, data) {\n    if (!section) {\n      return;\n    }\n    if (section instanceof Array) {\n      this.stack = this.stack.concat(section);\n    } else {\n      this.stack.push({\n        section: section,\n        attr: attr,\n        data: data\n      });\n    }\n  };\n\n  BBCode.prototype.append = function (str) {\n    this.solidify();\n    this._append(str);\n  };\n\n  BBCode.prototype._append = function (str) {\n    if (str) {\n      this.s += str;\n      this.weaknewline = false;\n    }\n  };\n\n  BBCode.prototype.solidify = function () {\n    // write back stack\n    var i;\n    for (i = 0; i < this.stack.length; i++) {\n      var st = this.stack[i];\n      var section = st.section;\n      var attr = st.attr;\n      var data = st.data;\n\n      var s = '[' + section;\n      if (typeof attr === 'string') {\n        s += '=' + attr;\n      } else {\n        for (var k in attr) {\n          s += ' ' + k + '=' + attr[k];\n        }\n      }\n      s += ']';\n      if (data) {\n        s += data;\n      }\n\n      this._append(s);\n    }\n    if (i > 0) {\n      this.stack = [];\n    }\n  };\n\n  BBCode.prototype.close = function (section) {\n    if (!section) {\n      return;\n    }\n    this.solidify();\n    this._append('[/' + section + ']');\n  };\n\n  BBCode.prototype.rollback = function () {\n    this.stack = [];\n  };\n\n  BBCode.prototype.newline = function (n) {\n    if (n === 2) {\n      // br\n      this.append('\\n');\n      this.weaknewline = true;\n    } else if (n === 1) {\n      // div, p\n      if (!this.weaknewline) {\n        this.append('\\n');\n        this.weaknewline = true;\n      }\n    } else if (!this.weaknewline) {\n      this.append('\\n');\n      this.weaknewline = true;\n    }\n  };\n\n  BBCode.prototype.toString = function () {\n    return this.s;\n  };\n\n  // opts: transsize, imagescale\n  function HTML2BBCode(opts) {\n    this.opts = opts ? opts : {};\n  }\n\n  HTML2BBCode.prototype.color = function (c) {\n    if (!c) return;\n    var c1Regex = /rgba?\\s*?\\(\\s*?(\\d{1,3})\\s*?,\\s*?(\\d{1,3})\\s*?,\\s*?(\\d{1,3})\\s*?.*?\\)/i;\n    if (c1Regex.test(c)) {\n      var pad2 = function (s) {\n        if (s.length < 2) {\n          s = '0' + s;\n        }\n        return s;\n      }\n      c = c.replace(c1Regex, function (match, r, g, b) {\n        r = pad2(parseInt(r).toString(16));\n        g = pad2(parseInt(g).toString(16));\n        b = pad2(parseInt(b).toString(16));\n        return '#' + r + g + b;\n      });\n    }\n    return c;\n  };\n\n  HTML2BBCode.prototype.size = function (size) {\n    if (!size) return;\n\n    var px2size = [0, 12, 14, 16, 18, 24, 32, 48];\n    var name2size = [null, 'smaller', 'small', 'medium', 'large',\n      'x-large', 'xx-large', '-webkit-xxx-large'];\n\n    if (/^\\d+$/.test(size)) {\n      return size;\n    } else if (/^\\d+?px$/.test(size)) {\n      size = parseInt(size);\n      if (!size || size < 0) {\n        return;\n      }\n      if (this.opts.transsize) {\n        for (var i = px2size.length; i >= 0; i--) {\n          if (i === 0) {\n            // smallest\n            return '1';\n          }\n          if (size >= px2size[i]) {\n            return i.toString();\n          }\n        }\n      } else {\n        return size.toString();\n      }\n    } else {\n      var ns = name2size.indexOf(size);\n      if (ns > 0) {\n        if (this.opts.transsize) {\n          return ns.toString();\n        } else {\n          return px2size[ns].toString();\n        }\n      }\n\n      // TODO: support other type\n      return;\n    }\n\n    return size ? size.toString() : undefined;\n  };\n\n  HTML2BBCode.prototype.px = function (px) {\n    if (!px) return;\n    px = parseInt(px);\n    return px ? px.toString() : undefined;\n  };\n\n  HTML2BBCode.prototype.convertStyle = function (htag, sec) {\n    if (!sec) {\n      return;\n    }\n    var bbs = [];\n    var that = this;\n    var opts = this.opts;\n    var addbb = function (sec) {\n      if (!sec || sec.ignore ||\n        !(sec.section || (sec.extend && sec.extend.length > 0))) {\n        return;\n      }\n      var tsec = { section: sec.section };\n      if (sec.attr) {\n        if (htag.attr) {\n          switch (sec.section) {\n            case 'size':\n              tsec.attr = that.size(htag.attr[sec.attr]);\n              break;\n            case 'color':\n              tsec.attr = that.color(htag.attr[sec.attr]);\n              break;\n            default:\n              tsec.attr = htag.attr[sec.attr];\n              break;\n          }\n          if (htag.attr.style) {\n            var ra;\n            switch (sec.section) {\n              case 'size':\n                ra = htag.attr.style['font-size'];\n                if (ra) ra = that.size(ra);\n                break;\n              case 'color':\n                ra = htag.attr.style['color'];\n                if (ra) ra = that.color(ra);\n                break;\n              case 'font':\n                ra = htag.attr.style['font-family'];\n                break;\n            }\n            if (ra) {\n              tsec.attr = ra;\n            }\n          }\n          if (!tsec.attr) {\n            return;\n          }\n        } else {\n          return;\n        }\n      } else if (sec.section === 'img' && opts.imagescale) {\n        // image attr\n        var w, h;\n        if (htag.attr) {\n          w = that.px(htag.attr['width']);\n          h = that.px(htag.attr['height']);\n          if (htag.attr.style) {\n            var w1, h1;\n            w1 = that.px(htag.attr.style['width']);\n            h1 = that.px(htag.attr.style['height']);\n            if (w1) w = w1;\n            if (h1) h = h1;\n          }\n          if (w && h) {\n            tsec.attr = w + 'x' + h;\n          } else if (w || h) {\n            if (w) {\n              tsec.attr = { width: w };\n            } else {\n              tsec.attr = { height: h };\n            }\n          }\n        }\n      }\n      if (sec.data) {\n        tsec.data = htag.attr[sec.data];\n      }\n      bbs.push(tsec);\n    };\n    // check font-weight & text-align\n    if (htag.attr && htag.attr.style) {\n      if (htag.name !== 'b' && htag.name !== 'strong') {\n        var att = htag.attr.style['font-weight'];\n        if (att === 'bold' || (/^\\d+$/.test(att) && parseInt(att) >= 700)) {\n          addbb(BBCode.maps['b']);\n        }\n      }\n      if (htag.name !== 'center') {\n        var att = htag.attr.style['text-align'];\n        if (att === 'center' && !opts.noalign) {\n          addbb(BBCode.maps['center']);\n        }\n      }\n      if (htag.name !== 'em' && htag.name !== 'i') {\n        var att = htag.attr.style['font-style'];\n        if (att === 'italic' || att === 'oblique') {\n          // italic style\n          addbb(BBCode.maps['i']);\n        }\n      }\n    }\n    if (sec.section === 'list'\n        || sec.section === 'ul' || sec.section === 'ol'\n        || sec.section === 'li') {\n      if (opts.nolist) {\n        return [];\n      }\n    } else if (sec.section === 'center') {\n      if (opts.noalign) {\n        return [];\n      }\n    } else if (/^h\\d+$/.test(sec.section)) {\n      // HTML Headings\n      if (opts.noheadings) {\n        // 18.5 -> 19\n        var headings2size = [ null, '32px', '24px', '19px', '16px', '14px', '12px' ];\n        var m = sec.section.match(/^h(\\d+)$/);\n        var hi = parseInt(m[1]);\n        if (hi <= 0) {\n          return [];\n        } else if (hi >= headings2size.length) {\n          hi = headings2size.length;\n        }\n        bbs.push({ section: 'size', attr: that.size(headings2size[hi]) });\n        return bbs;\n      }\n    }\n\n    if ('extend' in sec) {\n      for (var i = 0; i < sec.extend.length; i++) {\n        var tag = sec.extend[i];\n        addbb(BBCode.maps[tag]);\n      }\n    } else {\n      addbb(sec);\n    }\n    return bbs;\n  };\n\n  HTML2BBCode.prototype.convert = function (hstack) {\n    var bbcode = new BBCode();\n    if (!hstack) {\n      return bbcode;\n    }\n    var that = this;\n    var recursive = function (hs, anl) {\n      for (var i = 0; i < hs.length; i++) {\n        var s = hs[i];\n        if (s instanceof HTMLTag) {\n          if (s.name in BBCode.maps) {\n            var fnewline = 0;\n            var sec = BBCode.maps[s.name];\n            if (sec.ignore) {\n              continue;\n            }\n            if ('newline' in sec) {\n              fnewline = sec.newline;\n              bbcode.newline(sec.newline);\n            }\n            if (!s.content && !sec.empty) {\n              // drop this\n              continue;\n            }\n            var bbs = that.convertStyle(s, sec);\n            bbcode.open(bbs);\n\n            if (s.content) {\n              recursive(s.content.stack, fnewline);\n            }\n            for (var j = bbs.length - 1; j >= 0; j--) {\n              bbcode.close(bbs[j].section);\n            }\n            if (fnewline) {\n              // weak new line\n              bbcode.newline();\n            }\n          } else if (s.content) {\n            // drop section\n            recursive(s.content.stack);\n          }\n        } else if (typeof s === 'string') {\n          // force space\n          //s = s.replace(/&nbsp;/gi, ' ');\n          bbcode.append(s);\n        }\n      }\n    };\n    recursive(hstack.stack);\n    return bbcode;\n  };\n\n  HTML2BBCode.prototype.parse = function (html) {\n    return new HTMLStack().parse(html)\n      .strip().dedup().decode();\n  };\n\n  HTML2BBCode.prototype.feed = function (html) {\n    var hstack = this.parse(html);\n    if (this.opts.debug) {\n      hstack.showtree();\n    }\n    var bbcode = this.convert(hstack);\n    return bbcode;\n  };\n\n  return {\n    HTMLTag: HTMLTag,\n    HTMLStack: HTMLStack,\n    BBCode: BBCode,\n    HTML2BBCode: HTML2BBCode\n  };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/html2bbcode/lib/html2bbcode.js\n// module id = 296\n// module chunks = 3","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"arhibash_root\"},[_c('div',{staticClass:\"arhibash_header header\"},[_c('button',{staticClass:\"bttn icon-angle-left\",on:{\"click\":_vm.openPrevBash}}),_vm._v(\" \"),_c('button',{staticClass:\"bttn icon-angle-right\",on:{\"click\":_vm.openNextBash}}),_vm._v(\" \"),_c('span',{staticClass:\"flex_splitter\"},[_vm._v(_vm._s(_vm.postTitle))]),_vm._v(\" \"),_c('button',{staticClass:\"bttn\",on:{\"click\":_vm.newBash}},[_vm._v(\"Новый пост\")]),_vm._v(\" \"),_c('button',{staticClass:\"bttn\",on:{\"click\":_vm.saveBash}},[_vm._v(\"Сохранить\")])]),_vm._v(\" \"),_c('div',{staticClass:\"arhibash_conteiner\"},[_c('medium-editor',{staticClass:\"arhibash_post\",attrs:{\"text\":_vm.pagetext,\"custom-tag\":\"div\",\"options\":{toolbar:{buttons:['bold','italic','underline','strikethrough']},anchorPreview: false, disableExtraSpaces:true, paste: {forcePlainText:false}},\"data-placeholder\":\" \"},on:{\"edit\":function($event){_vm.editBash($event)}}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7f930fb0\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/arhibash.vue\n// module id = 297\n// module chunks = 3"],"sourceRoot":""}